# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mjYUnomGQ3v43GoAC3n4zaaANUBXEcj4
"""

import numpy as np

arr1 = np.array([1,2,3,4])
print(arr1)

alpha_arr = ["q", "y"]
np.array(alpha_arr)

for i in range(1,6):
  print(i)

np.arange(1,6)

n = np.arange(0,100,2)
print(n)

n = np.arange(100,0,-2)
print(n)

x = np.linspace(1,5)
x

x = np.linspace(0,1,5)
x

n = np.random.randint(1,100,5)
n

k = np.random.rand(1,10,2)
k

# Saturday topics

# 1D Array
arr1 = np.array([1, 2, 3, 4, 5])
print(arr1)

# 2D Array
arr2 = np.array([[1, 2, 3], [4, 5, 6]])
print(arr2)

# 3D Array
arr3 = np.array([[1,2,3], [1,2,3],[1,2,3]])
print(arr3)

# linspace() NumPy ka ek function hai jo equal spacing ke sath numbers ka array banata hai.
# Isme aap start point, end point, aur kitne numbers chahiye specify karte ho.
# np.linspace(start, stop, num=50)

arr = np.linspace(0, 10, 5)
print(arr)

arr = np.linspace(0, 100, 2)
print(arr)

arr = np.linspace(1, 100)
print(arr)

arr = np.linspace(0, 10, 15)   # ab 15 numbers generate kiye
reshaped = arr.reshape(3,5)
print(reshaped)

# np.eye() ek NumPy function hai jo identity matrix banata hai.
# Identity matrix ek square matrix hota hai jisme diagonal par 1 hote hain aur baaki jagah 0.

arr = np.eye(3)
print(arr)

# np.shape() Ye NumPy ka function hai jo array ka size aur dimension (rows × columns × …) batata hai.
# Iska output ek tuple hota hai.

arr = np.array([[1, 2, 3], [4, 5, 6]])
print(np.shape(arr))

arr3 = np.array([ [[1,2],[3,4]], [[5,6],[7,8]] ])
print(arr3.shape)

# day3

arr = np.array([[1,2],[2,2]])
print(arr)
arr.ndim

arr = np.array([[[1,2],[2,2]], [[1,2],[2,2]]])
arr

arr.ndim

arr[0]

arr = np.array([1,2,3,4,5,60])

arr[1]

# To access elements in a 1-dimensional array, use a single index.
# For example, to access the element at index 1:
arr[1]
# To access the element at index 2:
# arr[2]

arr = np.array([[1,2],[2,2]])
arr

arr[[0],[0]]

arr = np.array([[1,2],[2,2], [3,4]])
arr

